@using Order.Core.Entities
@using System.Text.Json
@using Order.Core.Entities.Basket

@if(BasketItem is not null){
    <EditForm Model="@BasketItem" OnValidSubmit="@AddToBasket">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">@BasketItem.Name
                @if (Product.GlutenFree) {
                    @:🌽
                }
                @if (Product.Vegetarian) {
                    @:🥦
                }
                </h5>
                @if(Product.AdditionalChoices is not null){
                    <AdditionalChoicesComponent  @bind-AdditionalChoices="BasketItem.AdditionalChoices" PossibleChoices="Product.AdditionalChoices"></AdditionalChoicesComponent>
                }
                <div class="form-group">
                    <label>Quantity: </label>
                    <InputNumber @bind-Value="BasketItem.Quantity" class="form-control"/>
                </div>
            </div>
            <div class="card-footer">
                <button class="btn" @onclick="OnCancel">⏹</button>
                <button class="btn" type="submit">☑</button>
            </div>
        </div>
    </EditForm>
}
@code {
    [Parameter]
    public Product Product { get; set; }

    [Parameter]
    public BasketItem BasketItem { get; set; }

    [Parameter]
    public EventCallback<BasketItem> OnAddItemToBasket{ get; set; }


    [Parameter]
    public EventCallback OnCancel{ get; set; }

    protected override void OnInitialized() {
        BasketItem = BasketItem.FromProduct(Product);
        BasketItem.Quantity = 1;
    }
    private async Task AddToBasket() {
        
        await OnAddItemToBasket.InvokeAsync(BasketItem);
    }
}
